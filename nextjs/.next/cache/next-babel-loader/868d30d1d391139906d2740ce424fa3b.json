{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nvar client = new ApolloClient({\n  link: ApolloLink.from([onError(function (_ref) {\n    var graphQLErrors = _ref.graphQLErrors,\n        networkError = _ref.networkError;\n    if (graphQLErrors) graphQLErrors.forEach(function (_ref2) {\n      var message = _ref2.message,\n          locations = _ref2.locations,\n          path = _ref2.path;\n      return console.log(\"[GraphQL error]: Message: \".concat(message, \", Location: \").concat(locations, \", Path: \").concat(path));\n    });\n    if (networkError) console.log(\"[Network error]: \".concat(networkError));\n  }), new HttpLink({\n    uri: 'http://localhost:3000/graphql',\n    credentials: 'same-origin'\n  })]),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"sources":["/Users/apple/dev/nestjsCRUD/nextjs/apollo.js"],"names":["ApolloClient","InMemoryCache","HttpLink","onError","ApolloLink","client","link","from","graphQLErrors","networkError","forEach","message","locations","path","console","log","uri","credentials","cache"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAEF,UAAU,CAACG,IAAX,CAAgB,CACpBJ,OAAO,CAAC,gBAAqC;AAAA,QAAlCK,aAAkC,QAAlCA,aAAkC;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;AAC3C,QAAID,aAAJ,EACEA,aAAa,CAACE,OAAd,CAAsB;AAAA,UAAGC,OAAH,SAAGA,OAAH;AAAA,UAAYC,SAAZ,SAAYA,SAAZ;AAAA,UAAuBC,IAAvB,SAAuBA,IAAvB;AAAA,aACpBC,OAAO,CAACC,GAAR,qCAC+BJ,OAD/B,yBACqDC,SADrD,qBACyEC,IADzE,EADoB;AAAA,KAAtB;AAKF,QAAIJ,YAAJ,EAAkBK,OAAO,CAACC,GAAR,4BAAgCN,YAAhC;AACnB,GARM,CADa,EAUpB,IAAIP,QAAJ,CAAa;AACXc,IAAAA,GAAG,EAAE,+BADM;AAEXC,IAAAA,WAAW,EAAE;AAFF,GAAb,CAVoB,CAAhB,CADwB;AAgB9BC,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AAhBuB,CAAjB,CAAf;AAmBA,eAAeI,MAAf","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.forEach(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n          ),\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    new HttpLink({\n      uri: 'http://localhost:3000/graphql',\n      credentials: 'same-origin',\n    }),\n  ]),\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n"]},"metadata":{},"sourceType":"module"}