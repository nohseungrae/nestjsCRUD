{"version":3,"file":"static/webpack/static/development/pages/index.js.10dc36db442f38e7befc.hot-update.js","sources":["webpack:///./components/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Header = styled.header`\n  width: 100%;\n  height: auto;\n  .container {\n    max-width: 1200px;\n    width: 100%;\n    height: auto;\n    .input_box {\n      display: flex;\n      justify-content: center;\n      align-content: center;\n      flex-direction: column;\n      > div {\n        flex: 0 0 33.333%;\n      }\n    }\n  }\n`;\nconst Item = styled.div``;\nexport default () => {\n  const [boards, setBoards] = useState();\n  const [render, setRender] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [updateData, setUpdateData] = useState({});\n  const [formData, setFormData] = useState({\n    writer: '',\n    title: '',\n    contents: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!update) {\n      const res = await axios.post('http://localhost:3000/boards', formData);\n    } else {\n      const res = await axios.patch(\n        `http://localhost:3000/boards/${formData.id}`,\n        formData,\n      );\n      if(res.data.message === \"업데이트가 실패했습니다.\"){\n        alert(res.data.message);\n        setFormData({writer : \"\", title : \"\", contents: \"\"})\n        return setUpdate(true)\n      } else{\n        setFormData({writer : \"\", title : \"\", contents: \"\"})\n        setUpdate(false);\n      }\n    }\n    setRender(true);\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n  const deleteBtn = async (id) => {\n    console.log(id);\n    const res = await axios.delete(`http://localhost:3000/boards/${id}`);\n    setRender(true);\n  };\n  const goToUpdate = (forUpdateData) => {\n    console.log(forUpdateData);\n    setUpdate(true);\n    setUpdateData({\n      writer : forUpdateData.writer,\n      id: forUpdateData._id,\n      title: forUpdateData.title,\n      contents: forUpdateData.contents,\n    });\n  };\n  useEffect(() => {\n    const getAllBoards = async () => {\n      const res = await axios.get('http://localhost:3000/boards');\n\n      console.log(res.data);\n      setBoards(res.data);\n    };\n    getAllBoards();\n    setRender(false);\n  }, [render]);\n  useEffect(() => {\n    console.log(updateData);\n    setFormData({\n      id: updateData.id,\n      title: updateData.title,\n      contents: updateData.contents,\n    });\n  }, [update]);\n  return (\n    <Header>\n      <div className=\"container\">\n        <div className=\"input_box\">\n          <div className=\"writer_box\">\n            <input\n              type=\"text\"\n              name=\"writer\"\n              value={update ? updateData.writer : formData.writer}\n              placeholder=\"글쓴이\"\n              disabled={update ? true : false}\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n          <div className=\"title_box\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={formData.title}\n              placeholder=\"제목\"\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n          <div className=\"contents_box\">\n            <input\n              type=\"text\"\n              name=\"contents\"\n              value={formData.contents}\n              placeholder=\"내용\"\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n          <button type=\"submit\" onClick={handleSubmit}>\n    {update ? \"수정\" : \"등록\"}\n          </button>\n        </div>\n        <div className=\"boards_box\">\n          {boards &&\n            boards.length > 0 &&\n            boards.map((board, i) => (\n              <Item key={i}>\n                {`글쓴이 : ${board.writer}, 제목 : ${board.title}, 내용 : ${board.contents}`}\n                <button type=\"button\" onClick={() => deleteBtn(board._id)}>\n                  삭제\n                </button>\n                <button type=\"button\" onClick={() => goToUpdate(board)}>\n                  수정\n                </button>\n              </Item>\n            ))}\n        </div>\n      </div>\n    </Header>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAkBA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAHA;AALA;AAAA;AACA;AAUA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AADA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAeA;;;;A","sourceRoot":""}